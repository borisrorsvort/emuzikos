<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeTask description="Callback after deploys" fullCmd="after_deploy" taksId="after_deploy" /><RakeTask description="Select all Heroku apps for later command" fullCmd="all" taksId="all" /><RakeTask description="Callback before deploys" fullCmd="before_deploy" taksId="before_deploy" /><RakeTask description="Captures a bundle on Heroku" fullCmd="capture" taksId="capture" /><RakeTask description="Opens a remote console" fullCmd="console" taksId="console" /><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Create the database from config/database.yml for the current Rails.env (use db:create:all to create all dbs in the config)" fullCmd="db:create" taksId="create" /><RakeTask description="Drops the database for the current Rails.env (use db:drop:all to drop all databases)" fullCmd="db:drop" taksId="drop" /><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Load fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeTask description="" fullCmd="db:fixtures:identify" taksId="identify" /></RakeGroup><RakeTask description="Migrate the database (options: VERSION=x, VERBOSE=false)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Display status of migrations" fullCmd="db:migrate:status" taksId="status" /><RakeTask description="" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="Pull the Heroku database" fullCmd="db:pull" taksId="pull" /><RakeTask description="Push local database to Heroku database" fullCmd="db:push" taksId="push" /><RakeTask description="Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeTask description="Create a db/schema.rb file that can be portably used against any DB supported by AR" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Load a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /></RakeGroup><RakeTask description="Load the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeTask description="Create the database, load the schema, and initialize with the seed data (use db:reset to also drop the db first)" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dump the database structure to an SQL file" fullCmd="db:structure:dump" taksId="dump" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="" fullCmd="db:charset" taksId="charset" /><RakeTask description="" fullCmd="db:collation" taksId="collation" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:forward" taksId="forward" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /><RakeTask description="" fullCmd="db:reset" taksId="reset" /><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="" fullCmd="db:sessions:clear" taksId="clear" /><RakeTask description="" fullCmd="db:sessions:create" taksId="create" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="db:test:clone" taksId="clone" /><RakeTask description="" fullCmd="db:test:clone_structure" taksId="clone_structure" /><RakeTask description="" fullCmd="db:test:load" taksId="load" /><RakeTask description="" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="db:test:purge" taksId="purge" /></RakeGroup></RakeGroup><RakeTask description="Select demo Heroku app for later commands" fullCmd="demo" taksId="demo" /><RakeTask description="Pushes the given commit, migrates and restarts (default: HEAD)" fullCmd="deploy[commit]" taksId="deploy[commit]" /><RakeGroup description="" fullCmd="" taksId="deploy"><RakeTask description="Force-pushes the given commit, migrates and restarts (default: HEAD)" fullCmd="deploy:force[commit]" taksId="force[commit]" /><RakeTask description="" fullCmd="deploy:force" taksId="force" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="development"><RakeTask description="create first admin" fullCmd="development:create_admin" taksId="create_admin" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="doc"><RakeTask description="Generate docs for the app -- also availble doc:rails, doc:guides, doc:plugins (options: TEMPLATE=/rdoc-template.rb, TITLE=&quot;Custom Title&quot;)" fullCmd="doc:app" taksId="app" /><RakeTask description="" fullCmd="doc:clobber" taksId="clobber" /><RakeTask description="" fullCmd="doc:clobber_app" taksId="clobber_app" /><RakeTask description="" fullCmd="doc:clobber_plugins" taksId="clobber_plugins" /><RakeTask description="" fullCmd="doc:clobber_rails" taksId="clobber_rails" /><RakeTask description="" fullCmd="doc:guides" taksId="guides" /><RakeTask description="" fullCmd="doc:plugins" taksId="plugins" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="" fullCmd="doc:plugins:dynamic_form" taksId="dynamic_form" /><RakeTask description="" fullCmd="doc:plugins:hassle" taksId="hassle" /><RakeTask description="" fullCmd="doc:plugins:recaptcha" taksId="recaptcha" /><RakeTask description="" fullCmd="doc:plugins:simple-private-messages" taksId="simple-private-messages" /></RakeGroup><RakeTask description="" fullCmd="doc:rails" taksId="rails" /><RakeTask description="" fullCmd="doc:reapp" taksId="reapp" /><RakeTask description="" fullCmd="doc:rerails" taksId="rerails" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="geocode"><RakeTask description="Geocode all objects without coordinates" fullCmd="geocode:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="gritter"><RakeTask description="Install the gritter sources" fullCmd="gritter:install" taksId="install" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="heroku"><RakeTask description="Lists configured apps" fullCmd="heroku:apps" taksId="apps" /><RakeGroup description="" fullCmd="" taksId="apps"><RakeTask description="Lists configured apps without hitting Heroku" fullCmd="heroku:apps:local" taksId="local" /></RakeGroup><RakeTask description="Add config:vars to each application" fullCmd="heroku:config" taksId="config" /><RakeGroup description="" fullCmd="" taksId="config"><RakeTask description="Lists config variables as set on Heroku" fullCmd="heroku:config:list" taksId="list" /><RakeGroup description="" fullCmd="" taksId="list"><RakeTask description="Lists local config variables without setting them" fullCmd="heroku:config:list:local" taksId="local" /></RakeGroup></RakeGroup><RakeTask description="Creates the Heroku app" fullCmd="heroku:create" taksId="create" /><RakeTask description="Creates an example configuration file" fullCmd="heroku:create_config" taksId="create_config" /><RakeTask description="Generate the Heroku gems manifest from gem dependencies" fullCmd="heroku:gems" taksId="gems" /><RakeTask description="Enable maintenance mode" fullCmd="heroku:maintenance" taksId="maintenance" /><RakeTask description="Disable maintenance mode" fullCmd="heroku:maintenance_off" taksId="maintenance_off" /><RakeTask description="Pushes the given commit (default: HEAD)" fullCmd="heroku:push[commit]" taksId="push[commit]" /><RakeGroup description="" fullCmd="" taksId="push"><RakeTask description="Force-pushes the given commit (default: HEAD)" fullCmd="heroku:push:force[commit]" taksId="force[commit]" /><RakeTask description="" fullCmd="heroku:push:force" taksId="force" /></RakeGroup><RakeTask description="Add proper RACK_ENV to each application" fullCmd="heroku:rack_env" taksId="rack_env" /><RakeTask description="Runs a rake task remotely" fullCmd="heroku:[task]" taksId="[task]" /><RakeTask description="Add git remotes for all apps in this project" fullCmd="heroku:remotes" taksId="remotes" /><RakeTask description="Adds a collaborator" fullCmd="heroku:share" taksId="share" /><RakeTask description="Removes a collaborator" fullCmd="heroku:unshare" taksId="unshare" /><RakeTask description="" fullCmd="heroku:push" taksId="push" /><RakeTask description="" fullCmd="heroku:rake" taksId="rake" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all *.log files in log/ to zero bytes" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Shows the Heroku logs" fullCmd="logs" taksId="logs" /><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Migrates and restarts remote servers" fullCmd="migrate" taksId="migrate" /><RakeTask description="Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /><RakeTask description="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="paperclip"><RakeTask description="Cleans out invalid attachments" fullCmd="paperclip:clean" taksId="clean" /><RakeTask description="Refreshes both metadata and thumbnails" fullCmd="paperclip:refresh" taksId="refresh" /><RakeGroup description="" fullCmd="" taksId="refresh"><RakeTask description="Regenerates content_type/size metadata for a given CLASS (and optional ATTACHMENT)" fullCmd="paperclip:refresh:metadata" taksId="metadata" /><RakeTask description="Regenerates thumbnails for a given CLASS (and optional ATTACHMENT)" fullCmd="paperclip:refresh:thumbnails" taksId="thumbnails" /></RakeGroup></RakeGroup><RakeTask description="Select production Heroku app for later commands" fullCmd="production" taksId="production" /><RakeGroup description="" fullCmd="" taksId="rails"><RakeTask description="Applies the template supplied by LOCATION=/path/to/template" fullCmd="rails:template" taksId="template" /><RakeTask description="Update both configs and public/javascripts from Rails (or use just update:javascripts or update:configs)" fullCmd="rails:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="freeze"><RakeTask description="" fullCmd="rails:freeze:edge" taksId="edge" /><RakeTask description="" fullCmd="rails:freeze:gems" taksId="gems" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="rails:templates:copy" taksId="copy" /></RakeGroup><RakeTask description="" fullCmd="rails:unfreeze" taksId="unfreeze" /><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="rails:update:application_controller" taksId="application_controller" /><RakeTask description="" fullCmd="rails:update:configs" taksId="configs" /><RakeTask description="" fullCmd="rails:update:javascripts" taksId="javascripts" /><RakeTask description="" fullCmd="rails:update:scripts" taksId="scripts" /></RakeGroup></RakeGroup><RakeTask description="Restarts remote servers" fullCmd="restart" taksId="restart" /><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeTask description="Select staging Heroku app for later commands" fullCmd="staging" taksId="staging" /><RakeTask description="Report code statistics (KLOCs, etc) from the application" fullCmd="stats" taksId="stats" /><RakeTask description="Runs test:units, test:functionals, test:integration together (also available: test:benchmark, test:profile, test:plugins)" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Run tests for {:recent=&gt;&quot;test:prepare&quot;} / Test recent changes" fullCmd="test:recent" taksId="recent" /><RakeTask description="Run tests for {:uncommitted=&gt;&quot;test:prepare&quot;} / Test changes since last checkin (only Subversion and Git)" fullCmd="test:uncommitted" taksId="uncommitted" /><RakeTask description="" fullCmd="test:benchmark" taksId="benchmark" /><RakeTask description="" fullCmd="test:functionals" taksId="functionals" /><RakeTask description="" fullCmd="test:integration" taksId="integration" /><RakeTask description="" fullCmd="test:plugins" taksId="plugins" /><RakeTask description="" fullCmd="test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="test:profile" taksId="profile" /><RakeTask description="" fullCmd="test:units" taksId="units" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="Displays all time zones, also available: time:zones:us, time:zones:local -- filter with OFFSET parameter, e.g., OFFSET=-6" fullCmd="time:zones:all" taksId="all" /><RakeTask description="" fullCmd="time:zones:local" taksId="local" /><RakeTask description="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="Clear session, cache, and socket files from tmp/ (narrow w/ tmp:sessions:clear, tmp:cache:clear, tmp:sockets:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for sessions, cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="" fullCmd="tmp:sessions:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tolk"><RakeTask description="Generate yml files for all the locales defined in Tolk" fullCmd="tolk:dump_all" taksId="dump_all" /><RakeTask description="Show all the keys potentially containing HTML values and no _html postfix" fullCmd="tolk:html_keys" taksId="html_keys" /><RakeTask description="Imports data all non default locale yml files to Tolk" fullCmd="tolk:import" taksId="import" /><RakeTask description="Copies required assets from tolk to application's public/ directory" fullCmd="tolk:import_assets" taksId="import_assets" /><RakeTask description="Add database tables, copy over the assets, and import existing translations" fullCmd="tolk:setup" taksId="setup" /><RakeTask description="Sync Tolk with the default locale's yml file" fullCmd="tolk:sync" taksId="sync" /></RakeGroup><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="deploy" taksId="deploy" /><RakeTask description="" fullCmd="doc" taksId="doc" /><RakeTask description="" fullCmd="doc/api" taksId="doc/api" /><RakeTask description="" fullCmd="doc/api/index.html" taksId="doc/api/index.html" /><RakeTask description="" fullCmd="doc/app" taksId="doc/app" /><RakeTask description="" fullCmd="doc/app/index.html" taksId="doc/app/index.html" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeTask description="" fullCmd="force_deploy" taksId="force_deploy" /><RakeTask description="" fullCmd="rails_env" taksId="rails_env" /></RakeGroup></Settings>
