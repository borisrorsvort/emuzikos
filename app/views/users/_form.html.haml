- content_for :scripts do
  :javascript
    $(document).ready(function() {
      LocationAutocomplete.init("#{t(:'activerecord.attributes.user.zip')}");
    });

= simple_form_for @user, :html => { :multipart => true, :class => "form-horizontal" } do |f|
  = f.error_messages
  = f.input :zip, :label => t(:'activerecord.attributes.user.zip'), input_html: {id: 'zip_autocomplete'}
  = f.input :avatar, :as => :file, :label =>  t(:'activerecord.attributes.user.avatar')
  - if @user.avatar.present?
    .control-group
      .controls
        %p= image_tag(@user.avatar.url(:gallery))
  = f.input :user_type, :collection => User::USER_TYPES, :label_method => lambda { |user_type|  t(:"users.types.#{user_type}") }, :as => :radio_buttons, wrapper_html: {class: "btn-radio-toggles"}
  = f.association :instruments, :label_method => :translated_name, :hint => (t(:"instruments_in_band_notice", :scope => [:users, :edit])).html_safe, :label => t(:'activerecord.attributes.user.instruments'),  :input_html => { :class => "chosen multiple_select" }
  .control-group
    .controls
      %p.help_block= (t(:'form_helpers.instrument_not_in_list', :scope => [:users, :edit]) + " " + t(:"form_helpers.request_through_dashboard", :scope => [:users, :edit])).html_safe

  = f.association :genres, :label_method => :translated_name, :hint => (t(:'form_helpers.genre_not_on_list', :scope => [:users, :edit]) + " " + t(:"form_helpers.request_through_dashboard", :scope => [:users, :edit])).html_safe, :label => t(:'activerecord.attributes.user.genre'), :input_html => { :class => "chosen multiple_select" }
  .control-group
    = f.label t(:'.searching_for'), :class => "select optional control-label"
    .controls
      = select(:user, :searching_for, grouped_options_for_select(searching_for_grouped_options, @user.searching_for ))

  = f.input :references, :label => t(:'activerecord.attributes.user.references'), :input_html => {:class => "input-xlarge"}
  = f.input :request_message, :as => :text, :label => t(:'activerecord.attributes.user.request_message'), :hint => (t(:'form_helpers.personal_infos_advice', :scope => [:users, :edit])).html_safe, :input_html => { :class => "input-xlarge" }
  = f.input :songkick_username, :placeholder => "Example: Lady Gaga", :label => t(:'activerecord.attributes.user.songkick_username'), :hint => (t(:'form_helpers.dont_have_a_service_account', :service => 'Songkick', :scope => [:users, :edit]) + " " + link_to(t(:'buttons.create_one_here'), 'http://www.songkick.com/signup')).html_safe
  = f.input :soundcloud_username, :placeholder => "Example: john-doe", :label => t(:'activerecord.attributes.user.soundcloud_username'), :hint => (link_to(image_tag("icons/authbuttons/soundcloud-button.png", :alt => "Soundcloud connect"), omniauth_authorize_path(:user, "soundcloud"), data: {:"no-turbolink" => "true"}) unless @current_user.has_service?("soundcloud"))

  = f.input :youtube_video_id, :placeholder => "Example: JW5meKfy3fY", :label => t(:'activerecord.attributes.user.youtube_video_id'), :hint => (t(:'form_helpers.dont_find_youtube_video_id', :scope => [:users, :edit]) + " " + link_to(t(:'buttons.click_here_for_help'), "#youtube_video_id_help", :data => { "toggle" => "modal" })).html_safe

  .control-group
    .controls
      %p.help_block= (t(:'form_helpers.dont_have_a_service_account', :service => "Youtube", :scope => [:users, :edit]) + " " + link_to(t(:'buttons.create_one_here'), "http://www.youtube.com/")).html_safe

    = f.input :visible, :collection => [[t('Yes'), true], [t('No'), false]], :as => :radio_buttons,  :label =>  t(:'activerecord.attributes.user.visible'), wrapper_html: {class: "btn-radio-toggles"}
    .control-group
      .controls
        .alert.alert-info
          %p= t(:"visible_explanation", :scope => [:users, :edit])
    = f.input :preferred_language, :collection => [["English", "en"], ["FranÃ§ais", "fr"]], :as => :radio_buttons, :selected => @user.preferred_language, :label => t(:'users.preferred.language'), wrapper_html: {class: "btn-radio-toggles"}
    = f.input :prefers_newsletters, :collection => [[t('Yes'), true], [t('No'), false]], :as => :radio_buttons,  :label => t(:"users.prefers.newsletters"), wrapper_html: {class: "btn-radio-toggles"}
    = f.input :prefers_message_notifications, :collection => [[t('Yes'), true], [t('No'), false]], :as => :radio_buttons,  :label => t(:"users.prefers.message_notifications"), wrapper_html: {class: "btn-radio-toggles"}

  .form-actions
    = f.button :submit, t(:'buttons.update'), :class => "btn btn-primary"

.modal.fade#youtube_video_id_help{:style => 'display:none;'}
  %section.modal-header
    =link_to "Ã—", "#", :data => { "dismiss" => "modal"}, :class => "close"
    %h3= t(:'youtube_video_id_help.title', :scope => [:users, :edit])
  %section#modal-body
    .well
      %ol
        %li
          = t(:'youtube_video_id_help.steps.first', :scope => [:users, :edit])
        %li
          %p= t(:'youtube_video_id_help.steps.second', :scope => [:users, :edit])
          %p= image_tag "modals/youtube/url-example.jpg", :alt => "youtube url example"
        %li
          = t(:'youtube_video_id_help.steps.third', :scope => [:users, :edit])
        %li
          = t(:'youtube_video_id_help.steps.fourth', :scope => [:users, :edit])
