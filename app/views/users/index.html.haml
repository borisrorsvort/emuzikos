- title t(:'.title')
- description t(:'.description')
- keywords t(:'.keywords')

/ .progress_bar_wrapper.hidden
/   .progress.progress-striped.active
/     .bar{:style => "width: 100%;"}

%section.users-list
  =# render "search", :q => @q, :genres => @genres, :instruments => @instruments, :user_types => @user_types, :countries => Carmen::Country.all
  -if !@users.blank?
    %ul.mini-profiles#og-grid.og-grid
      = render @users

    .clearfix
    = paginate @users

  -else
    .well
      %p=t(:'.no_users')
      %p= t(:'.invite_more_users')
      .spread
        %a{:onclick => "sendRequestViaMultiFriendSelector(); return false;", :class => "btn btn-mini"}
          =t(:'buttons.invite_your_friends_from_fb')
        .clearfix

- content_for :scripts do
  :javascript
    $(document).ready(function() {
      Images.adjustProfileThumbs('.mini-profile--thumb img');
      Grid.init();
    });

/ - content_for :scripts do
/   :javascript
/     var handler = null;
/     // Prepare layout options.
/     var options = {
/       autoResize: true, // This will auto-update the layout when the browser window is resized.
/       container: $('.users_list'), // Optional, used for some extra CSS styling
/       offset: 10, // Optional, the distance between grid items
/       itemWidth: 250 // Optional, the width of a grid item
/     };
/     /**
/      * When scrolled all the way to the bottom, add more tiles.
/      */
/     $('.users_list').infinitescroll({
/       navSelector  : '.pagination',    // selector for the paged navigation
/       nextSelector : '.pagination .next a',  // selector for the NEXT link (to page 2)
/       itemSelector : '.user_profile_listing',     // selector for all items you'll retrieve
/       loading: {
/           finishedMsg: "#{t(:'pagination.loading_more_results')}",
/           img: ""
/         }
/       },
/       // trigger Masonry as a callback
/       function( newElements ) {
/         // hide new items while they are loading
/         var $newElems = $( newElements ).css({ opacity: 0 });
/         // Track the scroll event
/         mixpanel.track('Scrolled users index');
/         // show elems now they're ready
/         $newElems.animate({ opacity: 1 });
/         if(handler) handler.wookmarkClear();
/         // Create a new layout handler.
/         handler = $('.user_profile_listing');
/         handler.imagesLoaded( function() {
/           handler.wookmark(options);
/         });
/       }
/     );
/     $(document).ready(function() {
/       // Call the layout function.
/       handler = $('.user_profile_listing');
/       handler.imagesLoaded( function() {
/         handler.wookmark(options);
/       });
/       mixpanel.track('Viewed user index');
/     });

/ :javascript
/   function sendRequestViaMultiFriendSelector() {
/     FB.ui({method: 'apprequests',
/       message: '#{t(:".invite_your_friends_from_fb_popup")}'
/     });
/   }

/   (function(d, s, id) {
/     var js, fjs = d.getElementsByTagName(s)[0];
/     if (d.getElementById(id)) return;
/     js = d.createElement(s); js.id = id;
/     js.src = "//connect.facebook.net/en_GB/all.js#xfbml=1";
/     fjs.parentNode.insertBefore(js, fjs);
/   }(document, 'script', 'facebook-jssdk'));



